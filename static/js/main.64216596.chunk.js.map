{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","defaultProps","App","useState","setGood","setNeutral","setBad","countTotal","reduce","acc","i","e","target","textContent","prev","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGe,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,mCACE,oCACE,6BAAKD,IACJC,OCLM,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OACE,mCACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,wBAAqBC,QAASL,EAA9B,SACGI,GADUA,QCJN,SAASE,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,OACZ,qDAAwBC,IAAxB,YCdO,SAASC,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,IAGbD,EAAaE,aAAe,CAC1BD,QAAS,I,YCEI,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOR,EAAP,KAAgBU,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOP,EAAP,KAAYU,EAAZ,KAuBMC,EAAa,WAEjB,MADc,CAACb,EAAMC,EAASC,GACjBY,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,IAAI,IAO9C,OACE,qCACE,cAAC5B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACE,EAAD,CACEC,QAAS,CAAEQ,OAAMC,UAASC,OAC1BT,gBAnCY,SAACwB,GAGnB,OAFaA,EAAEC,OAAOC,aAGpB,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAUA,EAAO,KACzB,MAEF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAUA,EAAO,KAC5B,MAEF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAUA,EAAO,WA0B1B,cAAChC,EAAD,CAASC,MAAM,aAAf,SACGwB,IAAe,EACd,cAACd,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOU,EACPT,mBApBc,WACtB,OAAOS,IAAeQ,KAAKC,MAAOtB,EAAOa,IAAgB,KAAO,KAsB1D,cAACR,EAAD,CAAcC,QAAQ,2BC5DhCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.64216596.chunk.js","sourcesContent":["// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <>\n      <section>\n        <h2>{title}</h2>\n        {children}\n      </section>\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\n// class Section extends Component {\n// static propTypes = {\n//   title: PropTypes.string.isRequired,\n//   children: PropTypes.node.isRequired,\n// };\n\n//   render() {\n// return (\n//   <>\n//     <section>\n//       <h2>{this.props.title}</h2>\n//       {this.props.children}\n//     </section>\n//   </>\n// );\n//   }\n// }\n\n// export default Section;\n","// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {Object.keys(options).map((option) => (\n        <button key={option} onClick={onLeaveFeedback}>\n          {option}\n        </button>\n      ))}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\n// class FeedbackOptions extends Component {\n// static propTypes = {\n//   options: PropTypes.object.isRequired,\n//   onLeaveFeedback: PropTypes.func.isRequired,\n// };\n\n//   render() {\n// return (\n//   <>\n//     {Object.keys(this.props.options).map((option) => (\n//       <button key={option} onClick={this.props.onLeaveFeedback}>\n//         {option}\n//       </button>\n//     ))}\n//   </>\n// );\n//   }\n// }\n// export default FeedbackOptions;\n","// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <ul>\n        <li>Good: {good}</li>\n        <li>Neutral: {neutral}</li>\n        <li>Bad: {bad}</li>\n        <li>Total: {total()}</li>\n        <li>Positive feedback: {positivePercentage()}%</li>\n      </ul>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.func.isRequired,\n};\n\n// class Statistics extends Component {\n// static propTypes = {\n//   good: PropTypes.number.isRequired,\n//   neutral: PropTypes.number.isRequired,\n//   bad: PropTypes.number.isRequired,\n//   total: PropTypes.func.isRequired,\n//   positivePercentage: PropTypes.func.isRequired,\n// };\n\n//   render() {\n// return (\n//   <>\n//     <ul>\n//       <li>Good: {this.props.good}</li>\n//       <li>Neutral: {this.props.neutral}</li>\n//       <li>Bad: {this.props.bad}</li>\n//       <li>Total: {this.props.total()}</li>\n//       <li>Positive feedback: {this.props.positivePercentage()}%</li>\n//     </ul>\n//   </>\n// );\n//   }\n// }\n\n// export default Statistics;\n","// import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.defaultProps = {\n  message: \"\",\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\n// class Notification extends Component {\n// static defaultProps = {\n//   message: \"\",\n// };\n//   static propTypes = {\n//     message: PropTypes.string,\n//   };\n\n//   render() {\n//     return <p>{this.props.message}</p>;\n//   }\n// }\n\n// export default Notification;\n","// import { Component } from \"react\";\nimport { useState } from \"react\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleClick = (e) => {\n    const text = e.target.textContent;\n\n    switch (text) {\n      case \"good\":\n        setGood((prev) => prev + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((prev) => prev + 1);\n        break;\n\n      case \"bad\":\n        setBad((prev) => prev + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotal = () => {\n    const total = [good, neutral, bad];\n    return total.reduce((acc, i) => (acc += i), 0);\n  };\n\n  const countPercentage = () => {\n    return countTotal() ? Math.round((good / countTotal()) * 100) : 0;\n  };\n\n  return (\n    <>\n      <Section title=\"Please Leave Feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleClick}\n        />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotal() > 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotal}\n            positivePercentage={countPercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//   handleClick = (e) => {\n//     const name = e.target.textContent;\n//     this.setState({ [name]: this.state[name] + 1 });\n//   };\n\n// countTotal = () => {\n//   return Object.values(this.state).reduce((acc, i) => (acc += i), 0);\n// };\n\n// countPercentage = () => {\n//   return this.countTotal()\n//     ? Math.round((this.state.good / this.countTotal()) * 100)\n//     : 0;\n// };\n\n//   render() {\n// return (\n//   <>\n//     <Section title=\"Please Leave Feedback\">\n//       <FeedbackOptions\n//         options={this.state}\n//         onLeaveFeedback={this.handleClick}\n//       />\n//     </Section>\n\n//     <Section title=\"Statistics\">\n//       {this.countTotal() > 0 ? (\n//         <Statistics\n//           good={this.state.good}\n//           neutral={this.state.neutral}\n//           bad={this.state.bad}\n//           total={this.countTotal}\n//           positivePercentage={this.countPercentage}\n//         />\n//       ) : (\n//         <Notification message=\"No feedback given\" />\n//       )}\n//     </Section>\n//   </>\n// );\n//   }\n// }\n\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}