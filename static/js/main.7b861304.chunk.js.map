{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","this","props","title","children","Component","FeedbackOptions","Object","keys","options","map","option","onClick","onLeaveFeedback","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","defaultProps","App","state","handelClick","e","name","target","textContent","setState","countTotal","values","reduce","acc","i","countPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAqBeA,E,4JAZb,WACE,OACE,mCACE,oCACE,6BAAKC,KAAKC,MAAMC,QACfF,KAAKC,MAAME,kB,GAXAC,aCkBPC,E,4JAZb,WAAU,IAAD,OACP,OACE,mCACGC,OAAOC,KAAKP,KAAKC,MAAMO,SAASC,KAAI,SAACC,GAAD,OACnC,wBAAqBC,QAAS,EAAKV,MAAMW,gBAAzC,SACGF,GADUA,Y,GAVON,aCwBfS,E,4JAfb,WACE,OACE,mCACE,+BACE,wCAAWb,KAAKC,MAAMa,QACtB,2CAAcd,KAAKC,MAAMc,WACzB,uCAAUf,KAAKC,MAAMe,OACrB,yCAAYhB,KAAKC,MAAMgB,WACvB,qDAAwBjB,KAAKC,MAAMiB,qBAAnC,gB,GAjBed,aCAnBe,E,4JAQJ,WACE,OAAO,4BAAInB,KAAKC,MAAMmB,c,GATChB,aAArBe,EACGE,aAAe,CACpBD,QAAS,IAWED,QC2CAG,G,wNAjDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,YAAc,SAACC,GACb,IAAMC,EAAOD,EAAEE,OAAOC,YACtB,EAAKC,SAAL,eAAiBH,EAAO,EAAKH,MAAMG,GAAQ,K,EAG7CI,WAAa,WACX,OAAOxB,OAAOyB,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAOC,IAAI,I,EAGlEC,gBAAkB,WAChB,OAAO,EAAKL,aACRM,KAAKC,MAAO,EAAKd,MAAMT,KAAO,EAAKgB,aAAgB,KACnD,G,4CAGN,WACE,OACE,qCACE,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAASR,KAAKuB,MACdX,gBAAiBZ,KAAKwB,gBAI1B,cAAC,EAAD,CAAStB,MAAM,aAAf,SACGF,KAAK8B,aAAe,EACnB,cAAC,EAAD,CACEhB,KAAMd,KAAKuB,MAAMT,KACjBC,QAASf,KAAKuB,MAAMR,QACpBC,IAAKhB,KAAKuB,MAAMP,IAChBC,MAAOjB,KAAK8B,WACZZ,mBAAoBlB,KAAKmC,kBAG3B,cAAC,EAAD,CAAcf,QAAQ,+B,GA1ChBhB,cCLlBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b861304.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Section extends Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n\n  render() {\n    return (\n      <>\n        <section>\n          <h2>{this.props.title}</h2>\n          {this.props.children}\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass FeedbackOptions extends Component {\n  static propTypes = {\n    options: PropTypes.object.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <>\n        {Object.keys(this.props.options).map((option) => (\n          <button key={option} onClick={this.props.onLeaveFeedback}>\n            {option}\n          </button>\n        ))}\n      </>\n    );\n  }\n}\nexport default FeedbackOptions;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Statistics extends Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.func.isRequired,\n    positivePercentage: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <>\n        <ul>\n          <li>Good: {this.props.good}</li>\n          <li>Neutral: {this.props.neutral}</li>\n          <li>Bad: {this.props.bad}</li>\n          <li>Total: {this.props.total()}</li>\n          <li>Positive feedback: {this.props.positivePercentage()}%</li>\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Notification extends Component {\n  static defaultProps = {\n    message: \"\",\n  };\n  static propTypes = {\n    message: PropTypes.string,\n  };\n\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handelClick = (e) => {\n    const name = e.target.textContent;\n    this.setState({ [name]: this.state[name] + 1 });\n  };\n\n  countTotal = () => {\n    return Object.values(this.state).reduce((acc, i) => (acc += i), 0);\n  };\n\n  countPercentage = () => {\n    return this.countTotal()\n      ? Math.round((this.state.good / this.countTotal()) * 100)\n      : 0;\n  };\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please Leave Feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handelClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotal() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotal}\n              positivePercentage={this.countPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}